/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Usuarios;

import Renders.RenderAlerta;
import Renders.RenderAlertaTitulo;
import com.sun.glass.events.KeyEvent;
import conexion.Conexion;
import entidades.Contrato;
import entidades.Parametros;
import entidades.Usuario;
import gestores.GestorParametros;
import gestores.GestoresContrato;
import gestores.fechas;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import pantallas.Alerta;
import static pantallas.Alerta.tablaAlerta;
import pantallas.DatosInmueble;
import pantallas.DetallesContrato;
import pantallas.PrincipalAdministrador;
import pantallas.pantallasClientes.DatosCliente;

/**
 *
 * @author Nahuel
 */
public class InicioSesion extends javax.swing.JFrame {

   
    /**
     * Creates new form InicioSesion
     */
    public InicioSesion() {
        initComponents();
        this.setResizable(false);
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtusuario = new javax.swing.JTextField();
        txtcontraseña = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("USUARIO:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("CONTRASEÑA:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/smLogo-InicioSesion.png"))); // NOI18N

        txtusuario.setText("ADMIN");
        txtusuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtusuarioActionPerformed(evt);
            }
        });
        txtusuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtusuarioKeyTyped(evt);
            }
        });

        txtcontraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcontraseñaKeyPressed(evt);
            }
        });

        jCheckBox1.setText("Mostrar Contraseña");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtusuario)
                        .addComponent(txtcontraseña, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addComponent(jLabel4))))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtcontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcontraseñaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcontraseñaKeyPressed

        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            try {
                inicioSesion();
            } catch (SQLException ex) {
                Logger.getLogger(InicioSesion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(InicioSesion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        

        // TODO add your handling code here:
    }//GEN-LAST:event_txtcontraseñaKeyPressed

    private void txtusuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtusuarioKeyTyped

        char c=evt.getKeyChar();
        if(Character.isLowerCase(c)){
            String cad=(""+c).toUpperCase();
            c=cad.charAt(0);
            evt.setKeyChar(c);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtusuarioKeyTyped

    private void txtusuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtusuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtusuarioActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

        if(jCheckBox1.isSelected()){
            txtcontraseña.setEchoChar((char)0);
        }else{
            txtcontraseña.setEchoChar((char)'*');
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void inicioSesion() throws SQLException, ParseException{
        Connection con=Conexion.getConexionn(); 
        String nombreUsuario=txtusuario.getText();
        String contraseña=String.valueOf(txtcontraseña.getPassword());
        
        Usuario usuario=new Usuario();
        usuario=GestorUsuario.traerUsuario(nombreUsuario);
        try{     
        if(nombreUsuario.equals(usuario.getUsuario()) && contraseña.compareTo(usuario.getClave())==0){
           if(usuario.getTipo().equals("ADMINISTRADOR")){
            try {                
                usuarioEnSesion=GestorUsuario.traerUsuario(nombreUsuario);
                PrincipalAdministrador principal=new PrincipalAdministrador();
                principal.setVisible(true);    
                
                try {
                    Alerta alerta=new Alerta();
                    Calendar ahora= Calendar.getInstance();
                    String dmy = ahora.get(Calendar.DATE)+"/"+(ahora.get(Calendar.MONTH)+1)+"/"+ahora.get(Calendar.YEAR);
                    ArrayList<Contrato> listaContratos=GestoresContrato.consultaPorEstado("Activo");
                    DefaultTableModel modeloAlerta= (DefaultTableModel) alerta.tablaAlerta.getModel();        
                    TableColumnModel columnModel = tablaAlerta.getColumnModel();
                    for(int i=0;i<alerta.tablaAlerta.getColumnCount();i++){
                        columnModel.getColumn(i).setCellRenderer(new RenderAlerta());
                        alerta.tablaAlerta.getColumnModel().getColumn(i).setHeaderRenderer(new RenderAlertaTitulo());           
                    }        
                    for(int i=0;i<listaContratos.size();i++){
                        String vencimiento=listaContratos.get(i).getFechaVencimiento();
                        int dias;
                        dias = fechas.cantidadDias(dmy,vencimiento);
                        if(dias<1){
                            GestoresContrato.FinalizarContrato(listaContratos.get(i).getIdContrato(),listaContratos.get(i).getInmueble().getId());
                        }
                        ArrayList<Parametros> parametro=GestorParametros.consultaParametros();
                        int d=parametro.get(0).getDiasAlerta();
                        if(dias<=d){              
                            modeloAlerta.addRow(new Object[]{listaContratos.get(i).getIdContrato(),listaContratos.get(i).getFechaVencimiento(),
                                listaContratos.get(i).getInmueble().getCalle(),
                                listaContratos.get(i).getInmueble().getPropietario().getApellido()+" "+listaContratos.get(i).getInmueble().getPropietario().getNombre(),
                                listaContratos.get(i).getInquilino().getApellido()+" "+listaContratos.get(i).getInquilino().getNombre(),dias});                               
                        }
                    }                             
                    if(alerta.tablaAlerta.getRowCount()==0){            
                    }else{
                        alerta.setLocationRelativeTo(null);
                        alerta.setVisible(true);
                    }             
                } catch (ParseException ex) {
                    Logger.getLogger(PrincipalAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                }                 
                this.dispose();
            } catch (ParseException ex) {
                Logger.getLogger(InicioSesion.class.getName()).log(Level.SEVERE, null, ex);
            }
           }else{
            
               usuarioEnSesion=GestorUsuario.traerUsuario(nombreUsuario);
                PrincipalAdministrador principal=new PrincipalAdministrador();
                principal.btnCrearInmueble.setEnabled(false);
                principal.btnNuevoContrato.setEnabled(false);
                principal.btnCrearPropietario.setEnabled(false);
                principal.btnCrearInquilino.setEnabled(false);
                principal.btnCrearGarante.setEnabled(false);
                principal.menuInmuebles.setEnabled(false);
                principal.menuPersonas.setEnabled(false);
                principal.menuRegistro.setEnabled(false);
                principal.menuBackup.setEnabled(false);
                principal.menuAgregarUsuario.setEnabled(false);
                principal.menuEliminarUsuario.setEnabled(false);
                principal.menuRecuperarUsuario.setEnabled(false);
                principal.menuCrearContrato.setEnabled(false);
                principal.menuRestaurar.setEnabled(false);
                principal.menuParametros.setEnabled(false);
                principal.menuAdminImpuestos.setEnabled(false);
                principal.setVisible(true);               
                this.dispose();
               
           }
        }else{
            JOptionPane.showMessageDialog(null, "Error al ingresar Usuario o Contraseña");
            txtcontraseña.setText("");
        }
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "El Usuario no existe ");
        }
        
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicioSesion().setVisible(true);
                txtcontraseña.requestFocus();
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JPasswordField txtcontraseña;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables


    public static Usuario usuarioEnSesion;
}
